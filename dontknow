#더하기

index = int(input())

while index :
    index -= 1
    input() # 불필요한 입력
    a = list(map(int, input().split(' ')))
    # 먼저 1 1 1 1 1이 들어온다고 치면은, 공백을 기준으로 split을 한다. 그리고 그것을 리스트 자료형으로 받는다 [1,1,1,1,1]. 그리고 그것을 int함수가 각 1들에게 적용됨. 문자열 1들이 아닌 숫자 1들이 됨.
    print(sum(a))
    # a = [1,1,1,1,1] 인데 그것의 합을 도출함
    
''' 
list 관련 함수 사용 : map, list, sum
map : map(f, iterable)은 함수(f)와 반복 가능한(iterable) 자료형을 입력으로 받는다. map은 입력받은 자료형의 각 요소를 함수 f가 수행한 결과를 묶어서 돌려주는 함수이다.
list : list(s)는 반복 가능한 자료형 s를 입력받아 리스트로 만들어 돌려주는 함수이다.
sum : sum(iterable) 은 입력받은 리스트나 튜플의 모든 요소의 합을 돌려주는 함수이다.
'''

# 리스트
stu = int(input())
a = list(map(int,input().split())) # [3,2,5,4,1]
count = 0

for i in range(stu) : # 0,1,2,3,4
    if a[i] != i+1 :  count += 1

print(count)

# 소수
def sosu(n) :
    if n == 1 : return False
    for i in range(2,n) : 
        if n%i == 0 : return False
    return True    
'''
의문점은 이것! 2는 어떻게 된 것인가.
1~9까지의 숫자를 생각해보자. 1은 소수가 아니기에 False이다. 
하지만 2가 들어간다면, for i in range(2,2)인데 2~1의 숫자가 i가 되는데, 이는 말 자체가 되지 않기 때문에 for문이 돌아가지 않아 True가 된다!
따라서 2는 소수로 판정이 된다.
'''
'''
n = 100일 때, 
100을 2~99로 하나씩 나누어 본다. 100은 2로 나누어졌기 때문에 False가 되고 소수가 아니다!
n = 61일 때,
61을 2~60로 하나씩 나누어 본다. 61은 어떤 숫자로도 나누어질 수 없기 때문에 True가 되고 소수이기 때문에 밑에 밑의 for문의 if문이 실행된다.
'''
a = int(input()) #60
b = int(input()) #100
sum = 0
min = 0

for i in range(b, a-1, -1) : #end숫자에서 내려가기 때문에 가장 마지막 숫자가 최소값이 된다. 100,99,98...60
    if(sosu(i)) : #함수에서 나온 값이 True일 경우에만 소수인 것이다.
        sum += i
        min = i
if sum == 0 : print(-1)
else : 
    print(sum)
    print(min)

# 셀프 넘버
# d(n) 함수를 만들 줄 알아야 함

def d(n) :
    sum = n #EX) n = 39, d(39) = 3+9+39 = 51이다. 따라서 미리 자기 자신을 sum에 넣는다. 
    while n>0 :
        sum += n % 10
        n = n//10 # n의 자리수는 정말 상관이 없었다.. 이때까지 4자리 3자리에 집착했는데 그냥 n을 몫으로 초기화시키고 그것이 0이 아닐때까지 하면 되는 거였다.
    return sum # 3+9+39

def isCretor(n) : # 생성자인지 물어보는 함수이다.
    for i in range(n-1, 0, -1) : # 생성자는 자기자신보다 1이 작은 수까지 차례대로 d(n)을 돌려보고 그것이 자기 자신과 같은지 확인한다. 확인한다면 생성자가 있다는 뜻이다.
        if (d(i) == n) : return True
    return False #생성자가 없다는 뜻.
#예를들어, 4(생성자는 2), 5(생성자 없음)으로 생각해보자
'''
n = 4. 따라서 3,2,1이 숫자들이 생성자인지 확인해야한다.
3은 6의 생성자이고
2는 4의 생성자로 정답이 나왔다. 따라서 생성자 함수는 True를 리턴한다.

하지만 n=5일 경우는 4,3,2,1로 확인해봤을 때 없기 때문에 false가 된다.
    
for i in range(1, 10001) :
    if (isCretor(i) == False) : print(i)
